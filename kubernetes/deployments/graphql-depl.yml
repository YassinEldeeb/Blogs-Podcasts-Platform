apiVersion: v1
kind: Service
metadata:
  name: graphql
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 4000
  selector:
    app: graphql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: graphql
  labels:
    app: graphql
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: graphql
  template:
    metadata:
      labels:
        app: graphql
    spec:
      containers:
        - name: graphql
          image: yassineldeeb/graphql:1
          imagePullPolicy: Always
          ports:
            - containerPort: 4000
          resources:
            requests:
              memory: '100Mi'
              cpu: '100m'
            limits:
              memory: '600Mi'
              cpu: '2000m'
          env:
            - name: PG_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: pg-username
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: pg-password
            - name: DB_NAME
              value: prisma-pg
            - name: DB_URL
              valueFrom:
                configMapKeyRef:
                  name: postgres-configmap
                  key: database_url
            - name: DATABASE_URL
              value: 'postgresql://$(PG_USER):${PG_PASSWORD}@$(DB_URL)/prisma-pg?schema=public'
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: redis-configmap
                  key: redis_host
