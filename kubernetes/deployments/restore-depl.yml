apiVersion: apps/v1
kind: Deployment
metadata:
  name: restore
  labels:
    app: restore
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: restore
  template:
    metadata:
      labels:
        app: restore
    spec:
      containers:
        - name: restore
          image: yassineldeeb/pg-restore:1
          imagePullPolicy: Always
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/pg-data
          resources:
            requests:
              memory: '100Mi'
              cpu: '100m'
            limits:
              memory: '300Mi'
              cpu: '250m'
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: graphql-secret
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: graphql-secret
                  key: AWS_SECRET_ACCESS_KEY
            - name: AWS_ACCOUNT_ID
              valueFrom:
                secretKeyRef:
                  name: graphql-secret
                  key: AWS_ACCOUNT_ID
            - name: DB_NAME
              value: prisma-pg
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
