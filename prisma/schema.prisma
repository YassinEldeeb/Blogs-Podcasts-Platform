generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["napi", "referentialActions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(cuid())
  name         String     @db.VarChar(255)
  email        String     @unique
  password     String     @db.VarChar(255)
  bio          String?
  tokenVersion Int        @default(0)
  confirmed    Boolean    @default(false)
  posts        Post[]
  comments     Comment[]
  hearts       Heart[]
  followers    Follower[]
  following    Follower[] @relation("followerToUser")
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Follower {
  id          String   @id @default(cuid())
  followerId  String
  followingId String
  follower    User     @relation(fields: [followerId], references: [id])
  following   User     @relation(fields: [followingId], references: [id], name: "followerToUser")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Post {
  id        String    @id @default(cuid())
  title     String
  body      String    @db.VarChar(500)
  tags      String[]
  published Boolean   @default(false)
  hearts    Heart[]
  authorId  String
  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Heart {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  authorId  String
  postId    String
  seen      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id        String   @id @default(cuid())
  text      String
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  authorId  String
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
