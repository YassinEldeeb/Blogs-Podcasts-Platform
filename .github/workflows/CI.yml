name: Run Tests and Deploy to Production

on:
  push:
    branches: [master]

jobs:
  Build-Packages:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.4'

      - name: Build Packages
        run: |
          yarn install --frozen-lockfile
          yarn build

  Server:
    runs-on: ubuntu-latest
    needs: [Build-Packages]
    steps:
      - uses: marceloprado/has-changed-path@v1
        id: changed-server
        with:
          paths: packages/server

      - name: Check if there's any changes
        if: steps.changed-server.outputs.changed == 'true'
        run: |
          no changed files

      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.4'

      - name: Run Tests
        run: |
          cd ./packages/server
          yarn install --frozen-lockfile
          npx jest

      - name: Docker Login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Build Server Image
        run: |
          yarn build-server-image

      - name: Push Server Image
        run: |
          docker push yassineldeeb/graphql:1

      - name: Install Digital Ocean CLI
        run: |
          sudo snap install doctl
          sudo snap connect doctl:kube-config
          sudo snap connect doctl:ssh-keys :ssh-keys

      - name: Login to DGO
        run: |
          doctl auth init --access-token=${{secrets.DGO_SECRET}}

      - uses: azure/setup-kubectl@v1
        id: install

      - name: Saving Cluster Credentials
        run: |
          sudo mkdir -m 777 /home/runner/.kube
          doctl kubernetes cluster kubeconfig save graphql-cluster

      - name: Switching Kubectl Context
        run: |
          kubectl config use-context do-lon1-graphql-cluster

      - name: Apply Kubernetes Stuff
        run: |
          kubectl apply -f ./kubernetes/deployments/graphql-depl.yml
          kubectl apply -f ./kubernetes/deployments/backup-depl.yml
          kubectl scale deployment graphql --replicas=0
          kubectl scale deployment graphql --replicas=2

  Backup:
    runs-on: ubuntu-latest
    needs: [Build-Packages]
    steps:
      - uses: marceloprado/has-changed-path@v1
        id: changed-backup
        with:
          paths: packages/backup

      - name: Check if there's any changes
        if: steps.changed-backup.outputs.changed == 'true'
        run: |
          no changed files

      - name: Docker Login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Build Backup Image
        run: |
          yarn build-backup-image

      - name: Push Backup Image
        run: |
          docker push yassineldeeb/pg-backup:1

  Restore:
    runs-on: ubuntu-latest
    needs: [Build-Packages]
    steps:
      - uses: marceloprado/has-changed-path@v1
        id: changed-restore
        with:
          paths: packages/restore

      - name: Check if there's any changes
        if: steps.changed-restore.outputs.changed == 'true'
        run: |
          no changed files

      - name: Docker Login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Build Restore Image
        run: |
          yarn build-restore-image

      - name: Push Restore Image
        run: |
          docker push yassineldeeb/pg-restore:1
